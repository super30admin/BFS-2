/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> list=new ArrayList<>();
        if(root==null) return list;
        boolean flag=true;
        Queue<TreeNode> q=new LinkedList<>();
        Stack<TreeNode> s=new Stack<>();
        q.add(root);
        while(!q.isEmpty())
        {
            List<Integer> l=new ArrayList<>();
            int len=q.size();
            if(flag==true)
            {
                for(int i=0;i<len;i++)
                {
                    TreeNode temp=q.remove();
                    if(temp.left!=null) q.add(temp.left);
                    if(temp.right!=null) q.add(temp.right);
                    l.add(temp.val);
                }
                list.add(l);
                flag=false;
            }
            else
            {
                for(int i=0;i<len;i++)
                {
                    TreeNode temp=q.remove();
                    s.push(temp);
                    if(temp.left!=null) q.add(temp.left);
                    if(temp.right!=null) q.add(temp.right);
                }
                while(!s.isEmpty())
                {
                    l.add((s.pop()).val);
                }
                list.add(l);
                flag=true;
            }
            
        }
        return list;
    }
}