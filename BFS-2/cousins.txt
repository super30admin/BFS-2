/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
//time comp = O(n)
//space complexity = O(1)
class Solution {
    public boolean isCousins(TreeNode root, int x, int y) {
        if(root == null) return false;
        Queue<TreeNode> q=new LinkedList<>();
        q.add(root);
        while(!q.isEmpty()){
            int count=q.size();
             boolean x_found=false,y_found=false;
            for(int i=0;i<count;i++)
            {
                TreeNode temp=q.remove();
                if(temp.right!=null && temp.left!=null)
                {
                    if(temp.right.val==x && temp.left.val==y) return false;
                    if(temp.right.val==y && temp.left.val==x) return false;
                }
                if(temp.val==x) x_found=true;
                else if(temp.val==y) y_found=true;
                if(temp.left!=null) q.add(temp.left);
                if(temp.right!=null) q.add(temp.right);
            }
            if(x_found && y_found) return true;
        }
        return false;
    }
}