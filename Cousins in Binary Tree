//Time Complexity: O(N)
//Space Complexity: O(N) || O(H) ??

//Approach: Idea is to match same level and different parent by performing dfs traverse.

SOLUTION:
class Solution {
    int x_level = 0;
    int y_level = 0;
    TreeNode x_parent=null;
    TreeNode y_parent=null;
    public boolean isCousins(TreeNode root, int x, int y) {
        if(root==null){
            return true;
        }
         dfs(root,0,null,x,y);
        return x_parent!=y_parent && x_level==y_level;
    }
    
    
    private void dfs(TreeNode root, int level, TreeNode parent,int x, int y){
        if(root==null){
            return;
        }
        
        if(root.val==x){
            x_parent = parent;
            x_level = level;
        }
        
        else if(root.val==y){
            y_parent = parent;
            y_level = level;
        }

         dfs(root.left,level+1, root,x,y); 
         dfs(root.right,level+1, root,x,y);
    }
}
