//Time Complexity : O(n)
//Space Complexity : O(h) where h is the height of the tree
// Did this code successfully run on Leetcode : Yes


class Solution 
{
    int xD = -1;
    int yD = -1;
    public boolean isCousins(TreeNode root, int x, int y) 
    {
        if(root == null)
        {
            return false;
        }
        Queue<TreeNode> q = new LinkedList<TreeNode>();
        q.add(root);
        while(!q.isEmpty())
        {
            int s = q.size();
            boolean xFound = false;
            boolean yFound = false;

            for(int i=0;i<s;i++)
            {
                TreeNode curr = q.poll();
                if(curr.val == x)
                {
                    xFound = true;
                }
                if(curr.val == y)
                {
                    yFound = true;
                }
                if(curr.left!=null && curr.right!=null)
                {
                    if(curr.left.val == x && curr.right.val == y)
                    {
                        return false;
                    }
                    if(curr.left.val == y && curr.right.val == x)
                    {
                        return false;
                    }
                }
                
                if(curr.left!=null)
                {
                    q.add(curr.left);
                }
                
                if(curr.right!=null)
                {
                    q.add(curr.right);
                }
            }
            
            if(xFound && yFound)
            {
                return true;
            }
            
            
        }
        
        return false;
    }
}