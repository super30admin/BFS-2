/**
*Time complexity : O(n) as we are doing recursive stack on each node
*Space complexity : O(1) as no extra space is used
*/
class Solution {
    TreeNode x_parent;
    TreeNode y_parent;
    int x_depth;
    int y_depth;
    public boolean isCousins(TreeNode root, int x, int y) {
        dfs(root,null,0,x,y);
        return x_parent!=y_parent && x_depth==y_depth;
    }
    private void dfs(TreeNode root,TreeNode parent,int depth,int x,int y){
        
        //base
        if(root==null) return;
        
        //logic
        if(root.val==x){
            x_parent=parent;
            x_depth=depth;
        }
        if(root.val==y){
            y_parent=parent;
            y_depth=depth;
        }
        dfs(root.left,root,depth+1,x,y);
        dfs(root.right,root,depth+1,x,y);
        
    }
}
