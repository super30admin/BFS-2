/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int xDepth = -1;
    int yDepth = -1;
    TreeNode xParent, yParent = null;
    
    public boolean isCousins(TreeNode root, int x, int y) {
        
        if(root == null){
            return false;
        }
        
        recurr(root, null, x, y, 0);
        return (xDepth == yDepth) && (xParent != yParent);
    }
    
    public void recurr(TreeNode node, TreeNode parent, int x, int y, int depth){
        if(node == null){
            return;
        }

        if(node.val == x){
            xDepth = depth;
            xParent = parent;
        }
        if(node.val == y){
            yDepth = depth;
            yParent = parent;
        }
        recurr(node.left, node, x, y, depth+1);
        recurr(node.right, node, x, y, depth+1);
    }
}
