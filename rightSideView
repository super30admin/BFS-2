/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    List<Integer> result;
    public List<Integer> rightSideView(TreeNode root) {
        
        //Using DFS
        //199. Binary Tree Right Side View
        //Time complexity is : O(n)
        //space is : O(height)
        
        result = new ArrayList<>();
        if(root == null)
            return result;
        
        helper(root,0);
        return result;
        
    }
    private void helper(TreeNode root, int level){
        //base
        if(root == null)
            return;
        
        if(level == result.size())
            result.add(root.val);               
        
        helper(root.right,level+1);             //First go to the right side of the                                                         tree
        helper(root.left,level+1);
    }
}