# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def rightSideView(self, root: Optional[TreeNode]) -> List[int]:
        if root is None:
            return None
        q = deque([root])
        res = []
        while q:
            for _ in range(len(q)):
                n = q.popleft()
                rVal = n.val
                if n.left is not None:
                    q.append(n.left)
                if n.right is not None:
                    q.append(n.right)
            res.append(rVal)
        return res

# Time Complexity: O(n)
# Space Complexity: O(n)
# Successfully implemented on Leetcode
