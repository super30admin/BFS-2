# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
#TC_O(N),SC-O(H)
class Solution:
    def isCousins(self, root: Optional[TreeNode], x: int, y: int) -> bool:
        if root is None:
            return False
        self.xparent=None
        self.yparent=None
        self.x_lvl=-1
        self.y_lvl=-1
        self.dfs(root,0,None,x,y)
        return self.x_lvl==self.y_lvl and self.xparent!=self.yparent
    def dfs(self,root: Optional[TreeNode],lvl:int, parent: Optional[TreeNode], x: int, y: int)-> None:
        # Base
        if root is None:
            return
        #logic
        if root.val==x:
            self.xparent=parent
            self.x_lvl=lvl
        if root.val==y:
            self.yparent=parent
            self.y_lvl=lvl
        self.dfs(root.left,lvl+1,root,x,y)
        self.dfs(root.right,lvl+1,root,x,y)

