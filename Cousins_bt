//TimeComplexity O(n)
//SpaceComplexity O(n)

class Solution {
    public boolean isCousins(TreeNode root, int x, int y) {
        Queue<TreeNode> q = new LinkedList<>();
        boolean x_exists = false;
        boolean y_exists = false;
// if(root == null)return false;
        q.add(root);
        

        while(!q.isEmpty()){
            int size = q.size();

            for(int  i = 0 ; i< size; i++){
                TreeNode curr =q.poll();
               

                if(curr.left != null && curr.right != null){
                if(curr.left.val == x && curr.right.val == y)return false;
                if(curr.left.val == y && curr.right.val == x)return false;
                }
                if(curr.val == x)x_exists = true;
                if(curr.val == y)y_exists = true;
                if(curr.left != null)q.add(curr.left);
                if(curr.right != null)q.add(curr.right);
                                    
            }
            if(x_exists == true && y_exists == true)
                    return true; 
            if(x_exists == true || y_exists == true) 
                    return false;
                
        }
        return true;
    }
}
