# // Time Complexity : O(N)
# // Space Complexity :O(H)
# // Did this code successfully run on Leetcode : Yes
# // Any problem you faced while coding this :

# Definition for a binary tree node.
class TreeNode:
    def __init__(self, val=0, left=None, right=None):
        self.val = val
        self.left = left
        self.right = right
class Solution:
    result = list()
    def rightSideView(self, root: Optional[TreeNode]) -> List[int]:
        result = list()
        if root == None:
            return result
        
        q = list()
        q.append(root)
        
        while(q):
            size = len(q)
            for i in range(size):
                curr = q.pop(0)
                if i == size-1: # for left side view i == 0
                    result.append(curr.val)
                    
                if(curr.left != None):
                    q.append(curr.left)
                if(curr.right != None):
                    q.append(curr.right)
        return result
                